<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Krystal\Katapult\KatapultAPI\Model;

class DNSRecordContentAttributes extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var RecordContentAttributesForA
     */
    protected $a;
    /**
     * @var RecordContentAttributesForAAAA
     */
    protected $aAAA;
    /**
     * @var RecordContentAttributesForALIAS
     */
    protected $aLIAS;
    /**
     * @var RecordContentAttributesForCAA
     */
    protected $cAA;
    /**
     * @var RecordContentAttributesForCNAME
     */
    protected $cNAME;
    /**
     * @var RecordContentAttributesForIPS
     */
    protected $iPS;
    /**
     * @var RecordContentAttributesForMX
     */
    protected $mX;
    /**
     * @var RecordContentAttributesForNS
     */
    protected $nS;
    /**
     * @var RecordContentAttributesForPTR
     */
    protected $pTR;
    /**
     * @var array<string, mixed>
     */
    protected $sOA;
    /**
     * @var RecordContentAttributesForSRV
     */
    protected $sRV;
    /**
     * @var RecordContentAttributesForSSHFP
     */
    protected $sSHFP;
    /**
     * @var RecordContentAttributesForTXT
     */
    protected $tXT;
    /**
     * @var RecordContentAttributesForVirtualMachine
     */
    protected $virtualMachine;

    public function getA(): RecordContentAttributesForA
    {
        return $this->a;
    }

    public function setA(RecordContentAttributesForA $a): self
    {
        $this->initialized['a'] = true;
        $this->a = $a;

        return $this;
    }

    public function getAAAA(): RecordContentAttributesForAAAA
    {
        return $this->aAAA;
    }

    public function setAAAA(RecordContentAttributesForAAAA $aAAA): self
    {
        $this->initialized['aAAA'] = true;
        $this->aAAA = $aAAA;

        return $this;
    }

    public function getALIAS(): RecordContentAttributesForALIAS
    {
        return $this->aLIAS;
    }

    public function setALIAS(RecordContentAttributesForALIAS $aLIAS): self
    {
        $this->initialized['aLIAS'] = true;
        $this->aLIAS = $aLIAS;

        return $this;
    }

    public function getCAA(): RecordContentAttributesForCAA
    {
        return $this->cAA;
    }

    public function setCAA(RecordContentAttributesForCAA $cAA): self
    {
        $this->initialized['cAA'] = true;
        $this->cAA = $cAA;

        return $this;
    }

    public function getCNAME(): RecordContentAttributesForCNAME
    {
        return $this->cNAME;
    }

    public function setCNAME(RecordContentAttributesForCNAME $cNAME): self
    {
        $this->initialized['cNAME'] = true;
        $this->cNAME = $cNAME;

        return $this;
    }

    public function getIPS(): RecordContentAttributesForIPS
    {
        return $this->iPS;
    }

    public function setIPS(RecordContentAttributesForIPS $iPS): self
    {
        $this->initialized['iPS'] = true;
        $this->iPS = $iPS;

        return $this;
    }

    public function getMX(): RecordContentAttributesForMX
    {
        return $this->mX;
    }

    public function setMX(RecordContentAttributesForMX $mX): self
    {
        $this->initialized['mX'] = true;
        $this->mX = $mX;

        return $this;
    }

    public function getNS(): RecordContentAttributesForNS
    {
        return $this->nS;
    }

    public function setNS(RecordContentAttributesForNS $nS): self
    {
        $this->initialized['nS'] = true;
        $this->nS = $nS;

        return $this;
    }

    public function getPTR(): RecordContentAttributesForPTR
    {
        return $this->pTR;
    }

    public function setPTR(RecordContentAttributesForPTR $pTR): self
    {
        $this->initialized['pTR'] = true;
        $this->pTR = $pTR;

        return $this;
    }

    /**
     * @return array<string, mixed>
     */
    public function getSOA(): iterable
    {
        return $this->sOA;
    }

    /**
     * @param array<string, mixed> $sOA
     */
    public function setSOA(iterable $sOA): self
    {
        $this->initialized['sOA'] = true;
        $this->sOA = $sOA;

        return $this;
    }

    public function getSRV(): RecordContentAttributesForSRV
    {
        return $this->sRV;
    }

    public function setSRV(RecordContentAttributesForSRV $sRV): self
    {
        $this->initialized['sRV'] = true;
        $this->sRV = $sRV;

        return $this;
    }

    public function getSSHFP(): RecordContentAttributesForSSHFP
    {
        return $this->sSHFP;
    }

    public function setSSHFP(RecordContentAttributesForSSHFP $sSHFP): self
    {
        $this->initialized['sSHFP'] = true;
        $this->sSHFP = $sSHFP;

        return $this;
    }

    public function getTXT(): RecordContentAttributesForTXT
    {
        return $this->tXT;
    }

    public function setTXT(RecordContentAttributesForTXT $tXT): self
    {
        $this->initialized['tXT'] = true;
        $this->tXT = $tXT;

        return $this;
    }

    public function getVirtualMachine(): RecordContentAttributesForVirtualMachine
    {
        return $this->virtualMachine;
    }

    public function setVirtualMachine(RecordContentAttributesForVirtualMachine $virtualMachine): self
    {
        $this->initialized['virtualMachine'] = true;
        $this->virtualMachine = $virtualMachine;

        return $this;
    }
}
