<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Krystal\Katapult\KatapultAPI\Model;

class FileStorageVolumeArguments extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Unique name to help identify the volume.
     *
     * @var string
     */
    protected $name;
    /**
     * All 'data_center[]' params are mutually exclusive, only one can be provided.
     *
     * @var DataCenterLookup
     */
    protected $dataCenter;
    /**
     * @var string[]
     */
    protected $associations;

    /**
     * Unique name to help identify the volume.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Unique name to help identify the volume.
     */
    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * All 'data_center[]' params are mutually exclusive, only one can be provided.
     */
    public function getDataCenter(): DataCenterLookup
    {
        return $this->dataCenter;
    }

    /**
     * All 'data_center[]' params are mutually exclusive, only one can be provided.
     */
    public function setDataCenter(DataCenterLookup $dataCenter): self
    {
        $this->initialized['dataCenter'] = true;
        $this->dataCenter = $dataCenter;

        return $this;
    }

    /**
     * @return string[]
     */
    public function getAssociations(): array
    {
        return $this->associations;
    }

    /**
     * @param string[] $associations
     */
    public function setAssociations(array $associations): self
    {
        $this->initialized['associations'] = true;
        $this->associations = $associations;

        return $this;
    }
}
