<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Krystal\Katapult\KatapultAPI\Model;

class VirtualMachineDiskArguments extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var bool
     */
    protected $boot;
    /**
     * Attach the disk during virtual machine start up. Default is true.
     *
     * @var bool
     */
    protected $attachOnBoot;
    /**
     * Attach the disk once built. If the virtual machine is not running the disk will attach when started. Only available when creating disk, existing disks must use the attach endpoint.
     *
     * @var bool
     */
    protected $attach;
    /**
     * All 'virtual_machine[]' params are mutually exclusive, only one can be provided.
     *
     * @var VirtualMachineLookup
     */
    protected $virtualMachine;

    public function getBoot(): bool
    {
        return $this->boot;
    }

    public function setBoot(bool $boot): self
    {
        $this->initialized['boot'] = true;
        $this->boot = $boot;

        return $this;
    }

    /**
     * Attach the disk during virtual machine start up. Default is true.
     */
    public function getAttachOnBoot(): bool
    {
        return $this->attachOnBoot;
    }

    /**
     * Attach the disk during virtual machine start up. Default is true.
     */
    public function setAttachOnBoot(bool $attachOnBoot): self
    {
        $this->initialized['attachOnBoot'] = true;
        $this->attachOnBoot = $attachOnBoot;

        return $this;
    }

    /**
     * Attach the disk once built. If the virtual machine is not running the disk will attach when started. Only available when creating disk, existing disks must use the attach endpoint.
     */
    public function getAttach(): bool
    {
        return $this->attach;
    }

    /**
     * Attach the disk once built. If the virtual machine is not running the disk will attach when started. Only available when creating disk, existing disks must use the attach endpoint.
     */
    public function setAttach(bool $attach): self
    {
        $this->initialized['attach'] = true;
        $this->attach = $attach;

        return $this;
    }

    /**
     * All 'virtual_machine[]' params are mutually exclusive, only one can be provided.
     */
    public function getVirtualMachine(): VirtualMachineLookup
    {
        return $this->virtualMachine;
    }

    /**
     * All 'virtual_machine[]' params are mutually exclusive, only one can be provided.
     */
    public function setVirtualMachine(VirtualMachineLookup $virtualMachine): self
    {
        $this->initialized['virtualMachine'] = true;
        $this->virtualMachine = $virtualMachine;

        return $this;
    }
}
