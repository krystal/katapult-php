<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Public\Model;

class StatsGetResponse200 extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The number of virtual machines launched (all time).
     *
     * @var int
     */
    protected $totalVirtualMachinesLaunched;
    /**
     * The number of virtual machines launched today.
     *
     * @var int
     */
    protected $totalVirtualMachinesLaunchedToday;
    /**
     * The total amount of memory (in GB).
     *
     * @var int
     */
    protected $totalMemory;
    /**
     * The total number of CPU cores.
     *
     * @var int
     */
    protected $totalCpuCores;
    /**
     * The total amount of block storage (in GB).
     *
     * @var int
     */
    protected $totalBlockStorage;
    /**
     * The number of organizations.
     *
     * @var int
     */
    protected $totalOrganizations;

    /**
     * The number of virtual machines launched (all time).
     */
    public function getTotalVirtualMachinesLaunched(): int
    {
        return $this->totalVirtualMachinesLaunched;
    }

    /**
     * The number of virtual machines launched (all time).
     */
    public function setTotalVirtualMachinesLaunched(int $totalVirtualMachinesLaunched): self
    {
        $this->initialized['totalVirtualMachinesLaunched'] = true;
        $this->totalVirtualMachinesLaunched = $totalVirtualMachinesLaunched;

        return $this;
    }

    /**
     * The number of virtual machines launched today.
     */
    public function getTotalVirtualMachinesLaunchedToday(): int
    {
        return $this->totalVirtualMachinesLaunchedToday;
    }

    /**
     * The number of virtual machines launched today.
     */
    public function setTotalVirtualMachinesLaunchedToday(int $totalVirtualMachinesLaunchedToday): self
    {
        $this->initialized['totalVirtualMachinesLaunchedToday'] = true;
        $this->totalVirtualMachinesLaunchedToday = $totalVirtualMachinesLaunchedToday;

        return $this;
    }

    /**
     * The total amount of memory (in GB).
     */
    public function getTotalMemory(): int
    {
        return $this->totalMemory;
    }

    /**
     * The total amount of memory (in GB).
     */
    public function setTotalMemory(int $totalMemory): self
    {
        $this->initialized['totalMemory'] = true;
        $this->totalMemory = $totalMemory;

        return $this;
    }

    /**
     * The total number of CPU cores.
     */
    public function getTotalCpuCores(): int
    {
        return $this->totalCpuCores;
    }

    /**
     * The total number of CPU cores.
     */
    public function setTotalCpuCores(int $totalCpuCores): self
    {
        $this->initialized['totalCpuCores'] = true;
        $this->totalCpuCores = $totalCpuCores;

        return $this;
    }

    /**
     * The total amount of block storage (in GB).
     */
    public function getTotalBlockStorage(): int
    {
        return $this->totalBlockStorage;
    }

    /**
     * The total amount of block storage (in GB).
     */
    public function setTotalBlockStorage(int $totalBlockStorage): self
    {
        $this->initialized['totalBlockStorage'] = true;
        $this->totalBlockStorage = $totalBlockStorage;

        return $this;
    }

    /**
     * The number of organizations.
     */
    public function getTotalOrganizations(): int
    {
        return $this->totalOrganizations;
    }

    /**
     * The number of organizations.
     */
    public function setTotalOrganizations(int $totalOrganizations): self
    {
        $this->initialized['totalOrganizations'] = true;
        $this->totalOrganizations = $totalOrganizations;

        return $this;
    }
}
