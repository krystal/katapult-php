<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Endpoint;

class PostObjectStorageObjectStorageClusterBucketRevokePresignedUrls extends \KatapultAPI\Core\Runtime\Client\BaseEndpoint implements \KatapultAPI\Core\Runtime\Client\Endpoint
{
    use \KatapultAPI\Core\Runtime\Client\EndpointTrait;

    /**
     * Revoke presigned URLs for all objects within an object storage bucket
     * ## Scopes
     * - `object_storage`.
     *
     * ### OAuth2 Scopes
     * When using OAuth2 authentication, scopes are prefixed with `api.katapult.io/core/v1/`.
     */
    public function __construct(?\KatapultAPI\Core\Model\ObjectStorageObjectStorageClusterBucketsBucketRevokePresignedUrlsPostBody $requestBody = null)
    {
        $this->body = $requestBody;
    }

    public function getMethod(): string
    {
        return 'POST';
    }

    public function getUri(): string
    {
        return '/object_storage/object_storage_cluster/buckets/bucket/revoke_presigned_urls';
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        if ($this->body instanceof \KatapultAPI\Core\Model\ObjectStorageObjectStorageClusterBucketsBucketRevokePresignedUrlsPostBody) {
            return [['Content-Type' => ['application/json']], $serializer->serialize($this->body, 'json')];
        }

        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    /**
     * @return \KatapultAPI\Core\Model\ObjectStorageObjectStorageClusterBucketsBucketRevokePresignedUrlsPostResponse200|null
     *
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsBadRequestException
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsForbiddenException
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsNotFoundException
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsNotAcceptableException
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsTooManyRequestsException
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsInternalServerErrorException
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsServiceUnavailableException
     * @throws \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsGatewayTimeoutException
     */
    protected function transformResponseBody(\Psr\Http\Message\ResponseInterface $response, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        $status = $response->getStatusCode();
        $body = (string) $response->getBody();
        if (is_null($contentType) === false && (200 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            return $serializer->deserialize($body, 'KatapultAPI\Core\Model\ObjectStorageObjectStorageClusterBucketsBucketRevokePresignedUrlsPostResponse200', 'json');
        }
        if (is_null($contentType) === false && (400 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsBadRequestException($serializer->deserialize($body, 'KatapultAPI\Core\Model\ResponseAPIAuthenticator400Response', 'json'), $response);
        }
        if (is_null($contentType) === false && (403 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsForbiddenException($response);
        }
        if (is_null($contentType) === false && (404 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsNotFoundException($response);
        }
        if (is_null($contentType) === false && (406 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsNotAcceptableException($serializer->deserialize($body, 'KatapultAPI\Core\Model\ResponseObjectInTrashResponse', 'json'), $response);
        }
        if (is_null($contentType) === false && (429 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsTooManyRequestsException($serializer->deserialize($body, 'KatapultAPI\Core\Model\ResponseAPIAuthenticator429Response', 'json'), $response);
        }
        if (is_null($contentType) === false && (500 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsInternalServerErrorException($serializer->deserialize($body, 'KatapultAPI\Core\Model\ResponseMultipleObjectStorageBucketsFoundResponse', 'json'), $response);
        }
        if (is_null($contentType) === false && (503 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsServiceUnavailableException($serializer->deserialize($body, 'KatapultAPI\Core\Model\ResponseAPIAuthenticator503Response', 'json'), $response);
        }
        if (is_null($contentType) === false && (504 === $status && mb_strpos($contentType, 'application/json') !== false)) {
            throw new \KatapultAPI\Core\Exception\PostObjectStorageObjectStorageClusterBucketRevokePresignedUrlsGatewayTimeoutException($serializer->deserialize($body, 'KatapultAPI\Core\Model\ResponseNetworkErrorResponse', 'json'), $response);
        }
    }

    public function getAuthenticationScopes(): array
    {
        return ['OAuth2', 'Authenticator'];
    }
}
