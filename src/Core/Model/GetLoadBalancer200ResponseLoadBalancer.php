<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Model;

class GetLoadBalancer200ResponseLoadBalancer extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var string
     */
    protected $id;
    /**
     * @var string
     */
    protected $name;
    /**
     * @var string|null
     */
    protected $apiReference;
    /**
     * @var string
     */
    protected $resourceType;
    /**
     * @var list<LoadBalancerResource>
     */
    protected $resources;
    /**
     * @var list<string>
     */
    protected $resourceIds;
    /**
     * @var GetLoadBalancerPartIPAddress
     */
    protected $ipAddress;
    /**
     * @var bool
     */
    protected $httpsRedirect;
    /**
     * @var string
     */
    protected $backendCertificate;
    /**
     * @var string
     */
    protected $backendCertificateKey;
    /**
     * @var GetLoadBalancerPartDataCenter
     */
    protected $dataCenter;
    /**
     * @var bool
     */
    protected $enableWeighting;
    /**
     * @var list<LoadBalancerWeight>
     */
    protected $weights;
    /**
     * @var list<string>
     */
    protected $standbyVms;

    public function getId(): string
    {
        return $this->id;
    }

    public function setId(string $id): self
    {
        $this->initialized['id'] = true;
        $this->id = $id;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    public function getApiReference(): ?string
    {
        return $this->apiReference;
    }

    public function setApiReference(?string $apiReference): self
    {
        $this->initialized['apiReference'] = true;
        $this->apiReference = $apiReference;

        return $this;
    }

    public function getResourceType(): string
    {
        return $this->resourceType;
    }

    public function setResourceType(string $resourceType): self
    {
        $this->initialized['resourceType'] = true;
        $this->resourceType = $resourceType;

        return $this;
    }

    /**
     * @return list<LoadBalancerResource>
     */
    public function getResources(): array
    {
        return $this->resources;
    }

    /**
     * @param list<LoadBalancerResource> $resources
     */
    public function setResources(array $resources): self
    {
        $this->initialized['resources'] = true;
        $this->resources = $resources;

        return $this;
    }

    /**
     * @return list<string>
     */
    public function getResourceIds(): array
    {
        return $this->resourceIds;
    }

    /**
     * @param list<string> $resourceIds
     */
    public function setResourceIds(array $resourceIds): self
    {
        $this->initialized['resourceIds'] = true;
        $this->resourceIds = $resourceIds;

        return $this;
    }

    public function getIpAddress(): GetLoadBalancerPartIPAddress
    {
        return $this->ipAddress;
    }

    public function setIpAddress(GetLoadBalancerPartIPAddress $ipAddress): self
    {
        $this->initialized['ipAddress'] = true;
        $this->ipAddress = $ipAddress;

        return $this;
    }

    public function getHttpsRedirect(): bool
    {
        return $this->httpsRedirect;
    }

    public function setHttpsRedirect(bool $httpsRedirect): self
    {
        $this->initialized['httpsRedirect'] = true;
        $this->httpsRedirect = $httpsRedirect;

        return $this;
    }

    public function getBackendCertificate(): string
    {
        return $this->backendCertificate;
    }

    public function setBackendCertificate(string $backendCertificate): self
    {
        $this->initialized['backendCertificate'] = true;
        $this->backendCertificate = $backendCertificate;

        return $this;
    }

    public function getBackendCertificateKey(): string
    {
        return $this->backendCertificateKey;
    }

    public function setBackendCertificateKey(string $backendCertificateKey): self
    {
        $this->initialized['backendCertificateKey'] = true;
        $this->backendCertificateKey = $backendCertificateKey;

        return $this;
    }

    public function getDataCenter(): GetLoadBalancerPartDataCenter
    {
        return $this->dataCenter;
    }

    public function setDataCenter(GetLoadBalancerPartDataCenter $dataCenter): self
    {
        $this->initialized['dataCenter'] = true;
        $this->dataCenter = $dataCenter;

        return $this;
    }

    public function getEnableWeighting(): bool
    {
        return $this->enableWeighting;
    }

    public function setEnableWeighting(bool $enableWeighting): self
    {
        $this->initialized['enableWeighting'] = true;
        $this->enableWeighting = $enableWeighting;

        return $this;
    }

    /**
     * @return list<LoadBalancerWeight>
     */
    public function getWeights(): array
    {
        return $this->weights;
    }

    /**
     * @param list<LoadBalancerWeight> $weights
     */
    public function setWeights(array $weights): self
    {
        $this->initialized['weights'] = true;
        $this->weights = $weights;

        return $this;
    }

    /**
     * @return list<string>
     */
    public function getStandbyVms(): array
    {
        return $this->standbyVms;
    }

    /**
     * @param list<string> $standbyVms
     */
    public function setStandbyVms(array $standbyVms): self
    {
        $this->initialized['standbyVms'] = true;
        $this->standbyVms = $standbyVms;

        return $this;
    }
}
