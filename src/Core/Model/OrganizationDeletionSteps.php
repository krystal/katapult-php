<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Model;

class OrganizationDeletionSteps extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var OrganizationDeletionStep
     */
    protected $managedOrganizations;
    /**
     * @var OrganizationDeletionStep
     */
    protected $virtualMachines;
    /**
     * @var OrganizationDeletionStep
     */
    protected $disks;
    /**
     * @var OrganizationDeletionStep
     */
    protected $fileStorageVolumes;
    /**
     * @var OrganizationDeletionStep
     */
    protected $diskBackupPolicies;
    /**
     * @var OrganizationDeletionStep
     */
    protected $isos;
    /**
     * @var OrganizationDeletionStep
     */
    protected $diskTemplates;
    /**
     * @var OrganizationDeletionStep
     */
    protected $loadBalancers;
    /**
     * @var OrganizationDeletionStep
     */
    protected $dnsZones;
    /**
     * @var OrganizationDeletionStep
     */
    protected $emptyTrash;
    /**
     * @var OrganizationDeletionStep
     */
    protected $virtualNetworks;
    /**
     * @var OrganizationDeletionStep
     */
    protected $ipAddresses;
    /**
     * @var OrganizationDeletionStep
     */
    protected $objectStorage;
    /**
     * @var OrganizationDeletionStep
     */
    protected $ensureZeroBalance;
    /**
     * @var OrganizationDeletionStep
     */
    protected $ensureNoOutstandingInvoices;

    public function getManagedOrganizations(): OrganizationDeletionStep
    {
        return $this->managedOrganizations;
    }

    public function setManagedOrganizations(OrganizationDeletionStep $managedOrganizations): self
    {
        $this->initialized['managedOrganizations'] = true;
        $this->managedOrganizations = $managedOrganizations;

        return $this;
    }

    public function getVirtualMachines(): OrganizationDeletionStep
    {
        return $this->virtualMachines;
    }

    public function setVirtualMachines(OrganizationDeletionStep $virtualMachines): self
    {
        $this->initialized['virtualMachines'] = true;
        $this->virtualMachines = $virtualMachines;

        return $this;
    }

    public function getDisks(): OrganizationDeletionStep
    {
        return $this->disks;
    }

    public function setDisks(OrganizationDeletionStep $disks): self
    {
        $this->initialized['disks'] = true;
        $this->disks = $disks;

        return $this;
    }

    public function getFileStorageVolumes(): OrganizationDeletionStep
    {
        return $this->fileStorageVolumes;
    }

    public function setFileStorageVolumes(OrganizationDeletionStep $fileStorageVolumes): self
    {
        $this->initialized['fileStorageVolumes'] = true;
        $this->fileStorageVolumes = $fileStorageVolumes;

        return $this;
    }

    public function getDiskBackupPolicies(): OrganizationDeletionStep
    {
        return $this->diskBackupPolicies;
    }

    public function setDiskBackupPolicies(OrganizationDeletionStep $diskBackupPolicies): self
    {
        $this->initialized['diskBackupPolicies'] = true;
        $this->diskBackupPolicies = $diskBackupPolicies;

        return $this;
    }

    public function getIsos(): OrganizationDeletionStep
    {
        return $this->isos;
    }

    public function setIsos(OrganizationDeletionStep $isos): self
    {
        $this->initialized['isos'] = true;
        $this->isos = $isos;

        return $this;
    }

    public function getDiskTemplates(): OrganizationDeletionStep
    {
        return $this->diskTemplates;
    }

    public function setDiskTemplates(OrganizationDeletionStep $diskTemplates): self
    {
        $this->initialized['diskTemplates'] = true;
        $this->diskTemplates = $diskTemplates;

        return $this;
    }

    public function getLoadBalancers(): OrganizationDeletionStep
    {
        return $this->loadBalancers;
    }

    public function setLoadBalancers(OrganizationDeletionStep $loadBalancers): self
    {
        $this->initialized['loadBalancers'] = true;
        $this->loadBalancers = $loadBalancers;

        return $this;
    }

    public function getDnsZones(): OrganizationDeletionStep
    {
        return $this->dnsZones;
    }

    public function setDnsZones(OrganizationDeletionStep $dnsZones): self
    {
        $this->initialized['dnsZones'] = true;
        $this->dnsZones = $dnsZones;

        return $this;
    }

    public function getEmptyTrash(): OrganizationDeletionStep
    {
        return $this->emptyTrash;
    }

    public function setEmptyTrash(OrganizationDeletionStep $emptyTrash): self
    {
        $this->initialized['emptyTrash'] = true;
        $this->emptyTrash = $emptyTrash;

        return $this;
    }

    public function getVirtualNetworks(): OrganizationDeletionStep
    {
        return $this->virtualNetworks;
    }

    public function setVirtualNetworks(OrganizationDeletionStep $virtualNetworks): self
    {
        $this->initialized['virtualNetworks'] = true;
        $this->virtualNetworks = $virtualNetworks;

        return $this;
    }

    public function getIpAddresses(): OrganizationDeletionStep
    {
        return $this->ipAddresses;
    }

    public function setIpAddresses(OrganizationDeletionStep $ipAddresses): self
    {
        $this->initialized['ipAddresses'] = true;
        $this->ipAddresses = $ipAddresses;

        return $this;
    }

    public function getObjectStorage(): OrganizationDeletionStep
    {
        return $this->objectStorage;
    }

    public function setObjectStorage(OrganizationDeletionStep $objectStorage): self
    {
        $this->initialized['objectStorage'] = true;
        $this->objectStorage = $objectStorage;

        return $this;
    }

    public function getEnsureZeroBalance(): OrganizationDeletionStep
    {
        return $this->ensureZeroBalance;
    }

    public function setEnsureZeroBalance(OrganizationDeletionStep $ensureZeroBalance): self
    {
        $this->initialized['ensureZeroBalance'] = true;
        $this->ensureZeroBalance = $ensureZeroBalance;

        return $this;
    }

    public function getEnsureNoOutstandingInvoices(): OrganizationDeletionStep
    {
        return $this->ensureNoOutstandingInvoices;
    }

    public function setEnsureNoOutstandingInvoices(OrganizationDeletionStep $ensureNoOutstandingInvoices): self
    {
        $this->initialized['ensureNoOutstandingInvoices'] = true;
        $this->ensureNoOutstandingInvoices = $ensureNoOutstandingInvoices;

        return $this;
    }
}
