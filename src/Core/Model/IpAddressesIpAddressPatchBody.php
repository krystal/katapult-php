<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Model;

class IpAddressesIpAddressPatchBody extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * All 'ip_address[]' params are mutually exclusive, only one can be provided.
     *
     * @var IPAddressLookup
     */
    protected $ipAddress;
    /**
     * Whether or not to set this address as a VIP.
     *
     * @var bool
     */
    protected $vip;
    /**
     * The label to give this address if setting it as a VIP.
     *
     * @var string
     */
    protected $label;
    /**
     * The reverse DNS to set for this IP address.
     *
     * @var string
     */
    protected $reverseDns;

    /**
     * All 'ip_address[]' params are mutually exclusive, only one can be provided.
     */
    public function getIpAddress(): IPAddressLookup
    {
        return $this->ipAddress;
    }

    /**
     * All 'ip_address[]' params are mutually exclusive, only one can be provided.
     */
    public function setIpAddress(IPAddressLookup $ipAddress): self
    {
        $this->initialized['ipAddress'] = true;
        $this->ipAddress = $ipAddress;

        return $this;
    }

    /**
     * Whether or not to set this address as a VIP.
     */
    public function getVip(): bool
    {
        return $this->vip;
    }

    /**
     * Whether or not to set this address as a VIP.
     */
    public function setVip(bool $vip): self
    {
        $this->initialized['vip'] = true;
        $this->vip = $vip;

        return $this;
    }

    /**
     * The label to give this address if setting it as a VIP.
     */
    public function getLabel(): string
    {
        return $this->label;
    }

    /**
     * The label to give this address if setting it as a VIP.
     */
    public function setLabel(string $label): self
    {
        $this->initialized['label'] = true;
        $this->label = $label;

        return $this;
    }

    /**
     * The reverse DNS to set for this IP address.
     */
    public function getReverseDns(): string
    {
        return $this->reverseDns;
    }

    /**
     * The reverse DNS to set for this IP address.
     */
    public function setReverseDns(string $reverseDns): self
    {
        $this->initialized['reverseDns'] = true;
        $this->reverseDns = $reverseDns;

        return $this;
    }
}
