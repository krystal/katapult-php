<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Model;

class PolicyLimits extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var FinancialPolicyLimit
     */
    protected $uninvoicedBalance;
    /**
     * @var PolicyLimit
     */
    protected $virtualMachines;
    /**
     * @var PolicyLimit
     */
    protected $virtualMachineMemory;
    /**
     * @var PolicyLimit
     */
    protected $managedOrganizations;
    /**
     * @var PolicyLimit
     */
    protected $unallocatedIpAddresses;
    /**
     * @var PolicyLimit
     */
    protected $diskSpace;
    /**
     * @var PolicyLimit
     */
    protected $securityGroups;
    /**
     * @var PolicyLimit
     */
    protected $virtualNetworks;
    /**
     * @var PolicyLimit
     */
    protected $loadBalancers;
    /**
     * @var PolicyLimit
     */
    protected $dnsZones;
    /**
     * @var PolicyLimit
     */
    protected $certificates;
    /**
     * @var PolicyLimit
     */
    protected $fileStorageVolumes;
    /**
     * @var PolicyLimit
     */
    protected $isos;
    /**
     * @var PolicyLimitWithoutCurrent
     */
    protected $diskIops;
    /**
     * @var PolicyLimitWithoutCurrent
     */
    protected $networkSpeed;

    public function getUninvoicedBalance(): FinancialPolicyLimit
    {
        return $this->uninvoicedBalance;
    }

    public function setUninvoicedBalance(FinancialPolicyLimit $uninvoicedBalance): self
    {
        $this->initialized['uninvoicedBalance'] = true;
        $this->uninvoicedBalance = $uninvoicedBalance;

        return $this;
    }

    public function getVirtualMachines(): PolicyLimit
    {
        return $this->virtualMachines;
    }

    public function setVirtualMachines(PolicyLimit $virtualMachines): self
    {
        $this->initialized['virtualMachines'] = true;
        $this->virtualMachines = $virtualMachines;

        return $this;
    }

    public function getVirtualMachineMemory(): PolicyLimit
    {
        return $this->virtualMachineMemory;
    }

    public function setVirtualMachineMemory(PolicyLimit $virtualMachineMemory): self
    {
        $this->initialized['virtualMachineMemory'] = true;
        $this->virtualMachineMemory = $virtualMachineMemory;

        return $this;
    }

    public function getManagedOrganizations(): PolicyLimit
    {
        return $this->managedOrganizations;
    }

    public function setManagedOrganizations(PolicyLimit $managedOrganizations): self
    {
        $this->initialized['managedOrganizations'] = true;
        $this->managedOrganizations = $managedOrganizations;

        return $this;
    }

    public function getUnallocatedIpAddresses(): PolicyLimit
    {
        return $this->unallocatedIpAddresses;
    }

    public function setUnallocatedIpAddresses(PolicyLimit $unallocatedIpAddresses): self
    {
        $this->initialized['unallocatedIpAddresses'] = true;
        $this->unallocatedIpAddresses = $unallocatedIpAddresses;

        return $this;
    }

    public function getDiskSpace(): PolicyLimit
    {
        return $this->diskSpace;
    }

    public function setDiskSpace(PolicyLimit $diskSpace): self
    {
        $this->initialized['diskSpace'] = true;
        $this->diskSpace = $diskSpace;

        return $this;
    }

    public function getSecurityGroups(): PolicyLimit
    {
        return $this->securityGroups;
    }

    public function setSecurityGroups(PolicyLimit $securityGroups): self
    {
        $this->initialized['securityGroups'] = true;
        $this->securityGroups = $securityGroups;

        return $this;
    }

    public function getVirtualNetworks(): PolicyLimit
    {
        return $this->virtualNetworks;
    }

    public function setVirtualNetworks(PolicyLimit $virtualNetworks): self
    {
        $this->initialized['virtualNetworks'] = true;
        $this->virtualNetworks = $virtualNetworks;

        return $this;
    }

    public function getLoadBalancers(): PolicyLimit
    {
        return $this->loadBalancers;
    }

    public function setLoadBalancers(PolicyLimit $loadBalancers): self
    {
        $this->initialized['loadBalancers'] = true;
        $this->loadBalancers = $loadBalancers;

        return $this;
    }

    public function getDnsZones(): PolicyLimit
    {
        return $this->dnsZones;
    }

    public function setDnsZones(PolicyLimit $dnsZones): self
    {
        $this->initialized['dnsZones'] = true;
        $this->dnsZones = $dnsZones;

        return $this;
    }

    public function getCertificates(): PolicyLimit
    {
        return $this->certificates;
    }

    public function setCertificates(PolicyLimit $certificates): self
    {
        $this->initialized['certificates'] = true;
        $this->certificates = $certificates;

        return $this;
    }

    public function getFileStorageVolumes(): PolicyLimit
    {
        return $this->fileStorageVolumes;
    }

    public function setFileStorageVolumes(PolicyLimit $fileStorageVolumes): self
    {
        $this->initialized['fileStorageVolumes'] = true;
        $this->fileStorageVolumes = $fileStorageVolumes;

        return $this;
    }

    public function getIsos(): PolicyLimit
    {
        return $this->isos;
    }

    public function setIsos(PolicyLimit $isos): self
    {
        $this->initialized['isos'] = true;
        $this->isos = $isos;

        return $this;
    }

    public function getDiskIops(): PolicyLimitWithoutCurrent
    {
        return $this->diskIops;
    }

    public function setDiskIops(PolicyLimitWithoutCurrent $diskIops): self
    {
        $this->initialized['diskIops'] = true;
        $this->diskIops = $diskIops;

        return $this;
    }

    public function getNetworkSpeed(): PolicyLimitWithoutCurrent
    {
        return $this->networkSpeed;
    }

    public function setNetworkSpeed(PolicyLimitWithoutCurrent $networkSpeed): self
    {
        $this->initialized['networkSpeed'] = true;
        $this->networkSpeed = $networkSpeed;

        return $this;
    }
}
