<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Model;

class VirtualMachineArguments extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var string
     */
    protected $hostname;
    /**
     * @var string
     */
    protected $name;
    /**
     * @var string
     */
    protected $description;
    /**
     * @var list<string>
     */
    protected $tagNames;
    /**
     * All 'gpu_type[]' params are mutually exclusive, only one can be provided.
     *
     * @var GPUTypeLookup
     */
    protected $gpuType;
    /**
     * All 'group[]' params are mutually exclusive, only one can be provided.
     *
     * @var VirtualMachineGroupLookup
     */
    protected $group;

    public function getHostname(): string
    {
        return $this->hostname;
    }

    public function setHostname(string $hostname): self
    {
        $this->initialized['hostname'] = true;
        $this->hostname = $hostname;

        return $this;
    }

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    public function getDescription(): string
    {
        return $this->description;
    }

    public function setDescription(string $description): self
    {
        $this->initialized['description'] = true;
        $this->description = $description;

        return $this;
    }

    /**
     * @return list<string>
     */
    public function getTagNames(): array
    {
        return $this->tagNames;
    }

    /**
     * @param list<string> $tagNames
     */
    public function setTagNames(array $tagNames): self
    {
        $this->initialized['tagNames'] = true;
        $this->tagNames = $tagNames;

        return $this;
    }

    /**
     * All 'gpu_type[]' params are mutually exclusive, only one can be provided.
     */
    public function getGpuType(): GPUTypeLookup
    {
        return $this->gpuType;
    }

    /**
     * All 'gpu_type[]' params are mutually exclusive, only one can be provided.
     */
    public function setGpuType(GPUTypeLookup $gpuType): self
    {
        $this->initialized['gpuType'] = true;
        $this->gpuType = $gpuType;

        return $this;
    }

    /**
     * All 'group[]' params are mutually exclusive, only one can be provided.
     */
    public function getGroup(): VirtualMachineGroupLookup
    {
        return $this->group;
    }

    /**
     * All 'group[]' params are mutually exclusive, only one can be provided.
     */
    public function setGroup(VirtualMachineGroupLookup $group): self
    {
        $this->initialized['group'] = true;
        $this->group = $group;

        return $this;
    }
}
