<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Model;

class LoadBalancerArguments extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var string
     */
    protected $name;
    /**
     * @var string
     */
    protected $apiReference;
    /**
     * @var string
     */
    protected $resourceType;
    /**
     * @var list<string>
     */
    protected $resourceIds;
    /**
     * All 'data_center[]' params are mutually exclusive, only one can be provided.
     *
     * @var DataCenterLookup
     */
    protected $dataCenter;
    /**
     * @var bool
     */
    protected $httpsRedirect;
    /**
     * @var bool
     */
    protected $enableWeighting;
    /**
     * @var list<LoadBalancerWeightsArguments>
     */
    protected $weights;
    /**
     * @var list<string>
     */
    protected $standbyVms;

    public function getName(): string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    public function getApiReference(): string
    {
        return $this->apiReference;
    }

    public function setApiReference(string $apiReference): self
    {
        $this->initialized['apiReference'] = true;
        $this->apiReference = $apiReference;

        return $this;
    }

    public function getResourceType(): string
    {
        return $this->resourceType;
    }

    public function setResourceType(string $resourceType): self
    {
        $this->initialized['resourceType'] = true;
        $this->resourceType = $resourceType;

        return $this;
    }

    /**
     * @return list<string>
     */
    public function getResourceIds(): array
    {
        return $this->resourceIds;
    }

    /**
     * @param list<string> $resourceIds
     */
    public function setResourceIds(array $resourceIds): self
    {
        $this->initialized['resourceIds'] = true;
        $this->resourceIds = $resourceIds;

        return $this;
    }

    /**
     * All 'data_center[]' params are mutually exclusive, only one can be provided.
     */
    public function getDataCenter(): DataCenterLookup
    {
        return $this->dataCenter;
    }

    /**
     * All 'data_center[]' params are mutually exclusive, only one can be provided.
     */
    public function setDataCenter(DataCenterLookup $dataCenter): self
    {
        $this->initialized['dataCenter'] = true;
        $this->dataCenter = $dataCenter;

        return $this;
    }

    public function getHttpsRedirect(): bool
    {
        return $this->httpsRedirect;
    }

    public function setHttpsRedirect(bool $httpsRedirect): self
    {
        $this->initialized['httpsRedirect'] = true;
        $this->httpsRedirect = $httpsRedirect;

        return $this;
    }

    public function getEnableWeighting(): bool
    {
        return $this->enableWeighting;
    }

    public function setEnableWeighting(bool $enableWeighting): self
    {
        $this->initialized['enableWeighting'] = true;
        $this->enableWeighting = $enableWeighting;

        return $this;
    }

    /**
     * @return list<LoadBalancerWeightsArguments>
     */
    public function getWeights(): array
    {
        return $this->weights;
    }

    /**
     * @param list<LoadBalancerWeightsArguments> $weights
     */
    public function setWeights(array $weights): self
    {
        $this->initialized['weights'] = true;
        $this->weights = $weights;

        return $this;
    }

    /**
     * @return list<string>
     */
    public function getStandbyVms(): array
    {
        return $this->standbyVms;
    }

    /**
     * @param list<string> $standbyVms
     */
    public function setStandbyVms(array $standbyVms): self
    {
        $this->initialized['standbyVms'] = true;
        $this->standbyVms = $standbyVms;

        return $this;
    }
}
