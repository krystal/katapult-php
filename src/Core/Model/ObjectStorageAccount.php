<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace KatapultAPI\Core\Model;

class ObjectStorageAccount extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var string
     */
    protected $region;
    /**
     * @var int
     */
    protected $createdAt;
    /**
     * @var string
     */
    protected $provisioningState;
    /**
     * The total storage used in bytes (updated periodically).
     *
     * @var int
     */
    protected $size;
    /**
     * @var int
     */
    protected $bucketCount;
    /**
     * @var DataCenter
     */
    protected $dataCenter;

    public function getRegion(): string
    {
        return $this->region;
    }

    public function setRegion(string $region): self
    {
        $this->initialized['region'] = true;
        $this->region = $region;

        return $this;
    }

    public function getCreatedAt(): int
    {
        return $this->createdAt;
    }

    public function setCreatedAt(int $createdAt): self
    {
        $this->initialized['createdAt'] = true;
        $this->createdAt = $createdAt;

        return $this;
    }

    public function getProvisioningState(): string
    {
        return $this->provisioningState;
    }

    public function setProvisioningState(string $provisioningState): self
    {
        $this->initialized['provisioningState'] = true;
        $this->provisioningState = $provisioningState;

        return $this;
    }

    /**
     * The total storage used in bytes (updated periodically).
     */
    public function getSize(): int
    {
        return $this->size;
    }

    /**
     * The total storage used in bytes (updated periodically).
     */
    public function setSize(int $size): self
    {
        $this->initialized['size'] = true;
        $this->size = $size;

        return $this;
    }

    public function getBucketCount(): int
    {
        return $this->bucketCount;
    }

    public function setBucketCount(int $bucketCount): self
    {
        $this->initialized['bucketCount'] = true;
        $this->bucketCount = $bucketCount;

        return $this;
    }

    public function getDataCenter(): DataCenter
    {
        return $this->dataCenter;
    }

    public function setDataCenter(DataCenter $dataCenter): self
    {
        $this->initialized['dataCenter'] = true;
        $this->dataCenter = $dataCenter;

        return $this;
    }
}
